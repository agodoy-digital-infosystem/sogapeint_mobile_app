name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  NODE_VERSION: 20.x
  POSTGRES_DB: test_db
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  POSTGRES_HOST: localhost
  POSTGRES_PORT: 5432

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ env.POSTGRES_DB }}
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Create .env file
      run: |
        touch .env
        echo "DB_HOST=${{ env.POSTGRES_HOST }}" >> .env
        echo "DB_PORT=${{ env.POSTGRES_PORT }}" >> .env
        echo "DB_USER=${{ env.POSTGRES_USER }}" >> .env
        echo "DB_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
        echo "DB_NAME=${{ env.POSTGRES_DB }}" >> .env
    
    - name: Run tests
      run: |
        cd $GITHUB_WORKSPACE/backend
        ./node_modules/.bin/jest

    - name: Upload coverage reports
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: backend/coverage/